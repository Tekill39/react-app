{"version":3,"sources":["components/Dialogs/Dialogs.module.css","components/Dialogs/Message/Message.jsx","components/Dialogs/DialogsItem/DialogsItem.jsx","components/common/AddMessageForm.jsx","components/Dialogs/Dialogs.jsx","components/Dialogs/DialogsContainer.js"],"names":["module","exports","Message","props","className","classes","dialog","message","DialogItem","path","id","active","to","name","maxLength50","maxLengthCreator","reduxForm","form","onSubmit","handleSubmit","Field","component","Textarea","validate","required","placeholder","Dialogs","state","dialogsPage","DialogsElements","dialogs","map","d","key","MesssagesElements","m","newMessageBody","isAuth","dialogsItem","messages","values","SendMessage","compose","connect","dispatch","sendMessageCreator","withAuthRedirect"],"mappings":"2FACAA,EAAOC,QAAU,CAAC,QAAU,yBAAyB,YAAc,6BAA6B,OAAS,wBAAwB,SAAW,0BAA0B,QAAU,2B,8ECSjKC,EANC,SAACC,GACb,OAAO,yBAAKC,UAAWC,IAAQC,QAASH,EAAMI,U,QCMnCC,EAPI,SAACL,GAChB,IAAIM,EAAO,YAAcN,EAAMO,GAC/B,OAAO,yBAAKN,UAAWC,IAAQC,OAAS,GAAKD,IAAQM,QACjD,kBAAC,IAAD,CAASC,GAAIH,GAAON,EAAMU,Q,mDCF5BC,EAAcC,YAAiB,IAgBtBC,cAAU,CAACC,KAAK,yBAAhBD,EAdQ,SAACb,GACpB,OACI,0BAAMe,SAAUf,EAAMgB,cAClB,6BACI,kBAACC,EAAA,EAAD,CAAOC,UAAWC,IAClBC,SAAW,CAACC,IAASV,GACrBW,YAAY,qBACZZ,KAAK,oBAET,6BAAK,6CCsBFa,EA9BC,SAACvB,GAEb,IAAIwB,EAAQxB,EAAMyB,YAEdC,EAAkBF,EAAMG,QAAQC,KAAI,SAAAC,GAAC,OAAI,kBAAC,EAAD,CAAYnB,KAAMmB,EAAEnB,KAAMoB,IAAKD,EAAEtB,GAAIA,GAAIsB,EAAEtB,QAEpFwB,EAAoBP,EAAMpB,QAAQwB,KAAI,SAAAI,GAAC,OAAI,kBAAE,EAAF,CAAU5B,QAAS4B,EAAE5B,QAAS0B,IAAKE,EAAEzB,QAC/DiB,EAAMS,eAM3B,OAAKjC,EAAMkC,OAIP,yBAAKjC,UAAWC,IAAQyB,SACpB,yBAAK1B,UAAWC,IAAQiC,aACnBT,GAEL,yBAAKzB,UAAWC,IAAQkC,UACpB,6BAAML,GACN,kBAAC,EAAD,CAAgBhB,SAdV,SAACsB,GACfrC,EAAMsC,YAAYD,EAAOJ,qBAGH,kBAAC,IAAD,CAAUxB,GAAI,Y,uBCE7B8B,sBAAQC,aAdD,SAAChB,GACvB,MAAM,CACNC,YAAYD,EAAMC,gBAGO,SAACgB,GACvB,MAAM,CACLH,YAAY,SAACL,GACTQ,EAASC,YAAmBT,SAMiCU,IAAtDJ,CAAwEhB","file":"static/js/4.46333081.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"dialogs\":\"Dialogs_dialogs__1sryq\",\"dialogsItem\":\"Dialogs_dialogsItem__2-pgj\",\"dialog\":\"Dialogs_dialog__39Pxk\",\"messages\":\"Dialogs_messages__3wgOQ\",\"message\":\"Dialogs_message__1r7YZ\"};","import React from 'react';\r\nimport classes from './../Dialogs.module.css'\r\n\r\n\r\nconst Message = (props) => {\r\n    return <div className={classes.dialog}>{props.message}\r\n    </div>\r\n}\r\n\r\n\r\nexport default Message;\r\n","import React from 'react';\r\nimport classes from './../Dialogs.module.css';\r\nimport { NavLink } from 'react-router-dom';\r\n\r\nconst DialogItem = (props) => {\r\n    let path = \"/dialogs/\" + props.id;\r\n    return <div className={classes.dialog + '' + classes.active}>\r\n        <NavLink to={path}>{props.name}</NavLink>\r\n    </div>\r\n}\r\n\r\nexport default DialogItem;\r\n","import React from 'react';\r\nimport { Field,reduxForm } from \"redux-form\";\r\nimport {Textarea} from '../common/FormControls/FormControls';\r\nimport{maxLengthCreator, required} from '../../utils/validators/validators'\r\n\r\nconst maxLength50 = maxLengthCreator(50);\r\n\r\nconst AddMessageForm = (props) => {\r\n    return (\r\n        <form onSubmit={props.handleSubmit}>\r\n            <div>\r\n                <Field component={Textarea} \r\n                validate= {[required,maxLength50]}\r\n                placeholder=\"Enter your message\"\r\n                name=\"newMessageBody\"/>\r\n            </div>\r\n            <div><button>Send</button></div>\r\n        </form>\r\n    )\r\n}\r\n\r\nexport default reduxForm({form:\"dialogsAddMessageForm\"})(AddMessageForm);","import React from 'react';\r\nimport classes from './Dialogs.module.css'\r\nimport Message from './Message/Message';\r\nimport DialogItem from './DialogsItem/DialogsItem';\r\nimport { Redirect } from 'react-router-dom';\r\nimport AddMessageForm from '../common/AddMessageForm';\r\n\r\n\r\nconst Dialogs = (props) => {\r\n\r\n    let state = props.dialogsPage;\r\n\r\n    let DialogsElements = state.dialogs.map(d => <DialogItem name={d.name} key={d.id} id={d.id} />);\r\n\r\n    let MesssagesElements = state.message.map(m => < Message message={m.message} key={m.id} />);\r\n    let newMessageBody = state.newMessageBody;\r\n\r\n    let addNewMessage=(values)=>{\r\n        props.SendMessage(values.newMessageBody);\r\n    }\r\n    \r\n    if (!props.isAuth) return <Redirect to={\"/login\"} />;\r\n\r\n\r\n    return (\r\n        <div className={classes.dialogs}>\r\n            <div className={classes.dialogsItem}>\r\n                {DialogsElements}\r\n            </div>\r\n            <div className={classes.messages}>\r\n                <div>{MesssagesElements}</div>\r\n                <AddMessageForm onSubmit={addNewMessage}/>\r\n        </div>\r\n        </div >\r\n    );\r\n}\r\n\r\n\r\nexport default Dialogs;","import React from 'react';\r\nimport Message from './Message/Message';\r\nimport DialogItem from './DialogsItem/DialogsItem';\r\nimport {sendMessageCreator} from '../../redux/dialogs-reducer';\r\nimport Dialogs from './Dialogs'\r\nimport { connect } from 'react-redux';\r\nimport {withAuthRedirect} from '../../hoc/withAuthRedirect';\r\nimport { compose } from 'redux';\r\n\r\nlet mapStateToProps = (state)=>{\r\nreturn{\r\ndialogsPage:state.dialogsPage,\r\n}\r\n}\r\nlet mapDispatchToProps = (dispatch)=>{\r\n   return{\r\n    SendMessage:(newMessageBody)=>{\r\n        dispatch(sendMessageCreator(newMessageBody));\r\n    }  \r\n   } \r\n}\r\n\r\n\r\nexport default compose(connect(mapStateToProps, mapDispatchToProps), withAuthRedirect)(Dialogs);"],"sourceRoot":""}