{"version":3,"sources":["api/api.js","components/common/preloader/preloader.js","hoc/withAuthRedirect.js","redux/dialogs-reducer.js","assets/img/805.svg","components/Navbar/Navbar.module.css","components/common/FormControls/FormControls.js","serviceWorker.js","components/Header/Header.jsx","redux/auth-reducer.js","components/Header/HeaderContainer.jsx","components/Navbar/Navbar.jsx","utils/validators/object-helpers.js","redux/users-reducer.js","components/Users/Paginator.jsx","components/Users/User.jsx","components/Users/Users.jsx","redux/users-selector.js","components/Users/UsersContainer.jsx","components/login/login.jsx","hoc/withSuspense.js","App.js","redux/app-reducer.js","redux/sidebar-reducer.js","redux/redux-store.js","index.js","components/common/FormControls/FormControls.module.css","utils/validators/validators.js","components/Users/Paginator.module.css","assets/img/users.png","components/Users/users.module.css","components/Header/Header.module.css","redux/profile-reducer.js"],"names":["instanse","axios","withCredentials","baseURL","headers","usersApi","getUsers","currentPage","pageSize","get","then","response","data","follow","userId","post","unfollow","delete","ProfileApi","getProfile","getStatus","updateStatus","status","put","savePhoto","photoPhoto","formData","FormData","append","safeProfile","profile","authApi","me","login","email","password","rememberMe","captcha","logout","securityApi","getCaptchaUrl","Preloader","props","style","backgroundColor","src","preloaderPhoto","mapStateToPropsRedirect","state","isAuth","auth","withAuthRedirect","Component","RedirectComponent","this","to","React","connect","initialState","dialogs","id","name","message","sendMessageCreator","newMessageBody","type","dialogsReducer","action","body","module","exports","Textarea","input","meta","hasError","touched","error","className","styles","formControl","Input","createField","placeholder","validators","component","text","validate","Boolean","window","location","hostname","match","Header","classes","header","loginBlock","onClick","captchaUrl","setAuthUserData","payload","getCaptchaUrlSuccess","getAuthUserData","dispatch","a","resultCode","url","authReducer","HeaderContainer","Navbar","nav","new","activeClassName","activeLink","updateObjectInArray","items","itemId","objPropName","newObjectProps","map","u","users","totalUsersCount","isFetching","followingIsProgress","followSuccess","unfollowSuccess","setCurrentPage","toggleIsFetching","toggleFollovingProgress","FollowUnflowFlow","ApiMethod","ActionCreator","usersReducer","followed","count","filter","Paginator","totalItemsCount","onPageChanged","portisionSize","pagesCount","Math","ceil","pages","i","push","portionCount","useState","portionNumber","setPortionNumber","leftPortionPageNumber","rightPortionPageNumber","paginator","p","cn","selectedPage","pageNumber","key","e","User","user","photos","small","userPhoto","disabled","some","Users","requireUsers","usersPage","getPageSize","getTotalUsersCount","getCurrentPage","getIsFetching","getFollowingIsProgress","UsersContainer","compose","bind","totalCount","LoginReduxForm","reduxForm","form","handleSubmit","onSubmit","required","formSummaryError","messages","length","stopSubmit","_error","withSuspense","Suspense","fallback","DialogsContainer","lazy","ProfileContainer","App","initialaizeApp","exact","path","render","withRouter","sidebarReducer","reducers","combineReducers","profilePage","profileReducer","dialogsPage","sidebar","userReducer","formReducer","composeEnhancers","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","store","createStore","applyMiddleware","thunkMiddleware","rendererMainThree","ReactDOM","document","getElementById","getState","subscribe","navigator","serviceWorker","ready","registration","unregister","catch","console","value","maxLengthCreator","maxLength","posts","likesCount","addPostActionCreator","newPostText","setStatus","getUserProfile","file","newPost","stateCopy"],"mappings":"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","file":"static/js/main.1cfaecf4.chunk.js","sourcesContent":["import * as axios from 'axios';\r\n\r\nconst instanse = axios.create({\r\n    withCredentials: true,\r\n    baseURL: 'https://social-network.samuraijs.com/api/1.0/',\r\n    headers: {\r\n        \"API-KEY\": \"5ddf4a85-1e89-471a-ab29-3d974a9b9967\"\r\n    }\r\n});\r\n\r\nexport const usersApi = {\r\n    getUsers(currentPage = 1, pageSize = 10) {\r\n\r\n        return instanse.get(`users?page=${currentPage}&count=${pageSize}`)\r\n            .then(response => {\r\n                return response.data;\r\n            });\r\n    },\r\n    follow(userId) {\r\n        return instanse.post(`follow/${userId}`)\r\n    },\r\n    unfollow(userId) {\r\n        return instanse.delete(`follow/${userId}`)\r\n    }\r\n}\r\n\r\nexport const ProfileApi = {\r\n    getProfile(userId) {\r\n        return instanse.get(`profile/` + userId);\r\n    },\r\n    getStatus(userId) {\r\n        return instanse.get(`profile/status/` + userId);\r\n    },\r\n    updateStatus(status) {\r\n        return instanse.put(`profile/status/`, {\r\n            status: status\r\n        });\r\n    },\r\n    savePhoto(photoPhoto){\r\n        \r\n        const formData = new FormData();\r\n        formData.append(\"image\", photoPhoto);\r\n        return instanse.put(`profile/photo`, formData, {\r\n            headers:{\r\n                'Content-Type': 'multipart/form-data'\r\n            }\r\n        });\r\n    },\r\n    safeProfile (profile) {\r\n        return instanse.put(`profile`, profile);\r\n    }\r\n}\r\nexport const authApi = {\r\n    me() {\r\n        return instanse.get(`auth/me`)\r\n    },\r\n    login(email, password, rememberMe = false, captcha=null) {\r\n        return instanse.post(`auth/login`, {\r\n            email,\r\n            password,\r\n            rememberMe,\r\n            captcha\r\n        });\r\n    },\r\n    logout() {\r\n        return instanse.delete(`auth/login`);\r\n    }\r\n}\r\n\r\nexport const securityApi = {\r\n    getCaptchaUrl() {\r\n        return instanse.get(`security/get-captcha-url`); \r\n    }\r\n}\r\n","import React from 'react';\r\nimport preloaderPhoto from '../../../assets/img/805.svg';\r\n\r\n\r\nlet Preloader=(props)=>{\r\n\r\nreturn <div style = { {backgroundColor:'white'}}>\r\n            <img src={preloaderPhoto} />\r\n        </div>\r\n}\r\n\r\n\r\nexport default Preloader;","import React from 'react';\r\nimport {Redirect} from 'react-router-dom'; \r\nimport { connect } from 'react-redux';\r\n\r\nlet mapStateToPropsRedirect = (state) =>({\r\n    isAuth:state.auth.isAuth\r\n});\r\n\r\nexport const withAuthRedirect = (Component) => {\r\n    class RedirectComponent extends React.Component {\r\n        render(){\r\n        if (!this.props.isAuth) return <Redirect to = '/login' />\r\n            return <Component {...this.props}/>\r\n    }\r\n}\r\n\r\nlet ConnectedAuthredirectComponent = connect(mapStateToPropsRedirect) (RedirectComponent);\r\nreturn ConnectedAuthredirectComponent;\r\n}","\nconst SEND_MESSAGE = 'SEND-MESSAGE';\nlet initialState = {\n    dialogs: [{\n        id: '1',\n        name: 'Misha'\n      },\n      {\n        id: '2',\n        name: 'Dima'\n      },\n      {\n        id: '3',\n        name: 'Masha'\n      },\n      {\n        id: '4',\n        name: 'Sasha'\n      },\n      {\n        id: '5',\n        name: 'Maxim'\n      },\n      {\n        id: '6',\n        name: 'Toma'\n      }\n    ],\n\n    message: [{\n        id: '1',\n        message: 'How are you'\n      },\n      {\n        id: '2',\n        message: 'So far, so good'\n      },\n      {\n        id: '3',\n        message: 'Hello'\n      },\n      {\n        id: '4',\n        message: 'Ok'\n      },\n      {\n        id: '5',\n        message: 'Hi'\n      },\n      {\n        id: '6',\n        message: 'Do you like react?'\n      }\n    ]\n};\n\nconst dialogsReducer = (state = initialState, action) => {\n\n     switch (action.type) {\n                 \n        case SEND_MESSAGE:\n            let body = action.newMessageBody;\n            return {\n              ...state,\n              message: [...state.message, {id: 6, message: body}]\n            };\n        default:\n            return state;\n    }\n}\nexport const sendMessageCreator = (newMessageBody) => ({\n    type: SEND_MESSAGE,newMessageBody\n})\n\nexport default dialogsReducer;","module.exports = __webpack_public_path__ + \"static/media/805.c3fb1e43.svg\";","// extracted by mini-css-extract-plugin\nmodule.exports = {\"nav\":\"Navbar_nav__3BNt5\",\"new\":\"Navbar_new__1PYdH\",\"activeLink\":\"Navbar_activeLink__2v8Nq\"};","import React from 'react';\r\nimport styles from './../FormControls/FormControls.module.css';\r\nimport { Field } from 'redux-form'; \r\n\r\n\r\nexport const Textarea=({input, meta, ...props}) => {\r\n    const hasError = meta.touched && meta.error;\r\n    return(\r\n        <div className={styles.formControl + \" \" + (hasError ? styles.error : \"\")}>\r\n        <div>\r\n            <textarea {...input} {...props}/>          \r\n        </div>\r\n        {hasError && <span>{meta.error}</span>}\r\n        </div>\r\n    )\r\n}\r\nexport const Input=({input, meta, ...props}) => {\r\n    const hasError = meta.touched && meta.error;\r\n    return(\r\n        <div className={styles.formControl + \" \" + (hasError ? styles.error : \"\")}>\r\n        <div>\r\n            <input {...input} {...props}/>          \r\n        </div>\r\n        {hasError && <span>{meta.error}</span>}\r\n        </div>\r\n    )\r\n}\r\nexport const createField=( placeholder, name, validators, component,props={}, text=\"\")=>(\r\n    <div>\r\n<Field placeholder={placeholder} component={component}\r\nvalidate={validators} name={name}\r\n{...props}/>{text}\r\n</div>)","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\r\nimport classes from './Header.module.css'\r\nimport { NavLink } from 'react-router-dom';\r\n\r\nconst Header = (props) => {\r\n    return (\r\n        <header className={classes.header}>\r\n            Header\r\n            <div className={classes.loginBlock}>\r\n                {props.isAuth\r\n                 ? <div>{props.login}<button onClick={props.logout}>Log out</button></div>\r\n                : <NavLink to={`/login`}>Login</NavLink>}\r\n            </div>\r\n        </header>\r\n    );\r\n} \r\nexport default Header;","import {\n    authApi,\n    securityApi\n} from '../api/api';\nimport {\n    stopSubmit\n} from 'redux-form';\n\n\nconst SET_USER_DATA = 'SET_USER_DATA';\nconst GET_CAPTCHA_URL_SUCCESS = 'GET_CAPTCHA_URL_SUCCESS';\n\n\nlet initialState = {\n    userId: null,\n    email: null,\n    login: null,\n    isAuth: false,\n    captchaUrl: null\n\n};\nconst authReducer = (state = initialState, action) => {\n    switch (action.type) {\n        case SET_USER_DATA:\n        case GET_CAPTCHA_URL_SUCCESS:\n            return {\n                ...state,\n                ...action.payload,\n            }\n        default:\n            return state;\n    }\n}\n\nexport const setAuthUserData = (userId, email, login, isAuth) => ({\n    type: SET_USER_DATA,\n    payload: {\n        userId,\n        email,\n        login,\n        isAuth\n    }\n})\n\nexport const getCaptchaUrlSuccess = (captchaUrl) => ({\n    type: GET_CAPTCHA_URL_SUCCESS,\n    payload: {\n        captchaUrl\n    }\n})\n\nexport const getAuthUserData = () => async (dispatch) => {\n    let response = await authApi.me();\n\n    if (response.data.resultCode === 0) {\n\n        let {\n            id,\n            login,\n            email\n        } = response.data.data;\n        dispatch(setAuthUserData(id, email, login, true));\n    }\n}\n\nexport const login = (email, password, rememberMe, captcha) => async (dispatch) => {\n    let response = await authApi.login(email, password, rememberMe,captcha);\n    if (response.data.resultCode === 0) {\n        dispatch(getAuthUserData());\n    } else {\n        if (response.data.resultCode === 10) {\n            dispatch(getCaptchaUrl());\n        }\n        let message = response.data.messages.length > 0 ? response.data.messages[0] : \"Some error\";\n        dispatch(stopSubmit(\"login\", {\n            _error: message\n        }));\n    }\n}\n\nexport const getCaptchaUrl = (email, password, rememberMe) => async (dispatch) => {\n    const response = await securityApi.getCaptchaUrl();\n    const captchaUrl = response.data.url;\n    dispatch(getCaptchaUrlSuccess(captchaUrl));\n}\n\nexport const logout = () => async (dispatch) => {\n    let response = await authApi.logout();\n\n    if (response.data.resultCode === 0) {\n        dispatch(setAuthUserData(null, null, null, false));\n    }\n}\n\nexport default authReducer;","import React from 'react';\r\nimport Header from './Header';\r\nimport { connect } from 'react-redux';\r\nimport {logout} from '../../redux/auth-reducer';\r\n\r\n\r\n\r\nclass HeaderContainer extends React.Component {\r\n\r\n    \r\n\r\n    render() {\r\n        return <Header{...this.props} />\r\n    }\r\n}\r\nconst mapStateToProps = (state) => ({\r\n    isAuth:state.auth.isAuth,\r\n    login:state.auth.login,\r\n});\r\nexport default connect(mapStateToProps, {logout})(HeaderContainer);","import React from 'react';\r\nimport classes from './Navbar.module.css';\r\nimport { NavLink } from 'react-router-dom';\r\n\r\nconst Navbar = () => {\r\n    return (\r\n        <nav className={classes.nav}>\r\n            <div className={classes.new}>\r\n                <NavLink to = '/profile' activeClassName={classes.activeLink}>Profile</NavLink>\r\n            </div>\r\n            <div className={classes.new}>\r\n                <NavLink to = '/dialogs' activeClassName={classes.activeLink}>Messages</NavLink>\r\n            </div>\r\n            <div className={classes.new}>\r\n                <NavLink to = '/users' activeClassName={classes.activeLink}>Users</NavLink>\r\n            </div>\r\n            <div className={classes.new}>\r\n                <a>News</a>\r\n            </div>\r\n            <div className={classes.new}>\r\n                <a>Music</a>\r\n            </div>\r\n            <div className={classes.new}>\r\n                <a>Settings</a>\r\n            </div>\r\n        </nav>\r\n    );\r\n}\r\nexport default Navbar;","export const updateObjectInArray = (items, itemId, objPropName, newObjectProps)=>{\r\nreturn items.map(u => {\r\n    if (u[objPropName] === itemId) {\r\n        return {...u, ...newObjectProps}\r\n    }\r\n    return u;\r\n})\r\n} \r\nexport default updateObjectInArray;\r\n","import {\n    usersApi\n} from '../api/api';\nimport updateObjectInArray from './../utils/validators/object-helpers';\nimport cn from \"classnames\";\n\nconst FOLLOW = 'FOLLOW';\nconst UNFOLLOW = 'UNFOLLOW';\nconst SET_USERS = 'SET_USERS';\nconst SET_CURRENT_PAGE = 'SET_CURRENT_PAGE';\nconst SET_TOTAL_USERS_COUNT = 'SET_TOTAL_USERS_COUNT';\nconst TOGGLE_IS_FETCHING = 'TOGGLE_IS_FETCHING';\nconst TOGGLE_IS_FOLLOWING_PROGRESS = 'TOGGLE_IS_FOLLOWING_PROGRESS';\n\n\n\nlet initialState = {\n    users: [],\n    totalUsersCount: 0,\n    pageSize: 15,\n    currentPage: 1,\n    isFetching: true,\n    followingIsProgress: []\n};\nconst usersReducer = (state = initialState, action) => {\n    switch (action.type) {\n        case FOLLOW:\n            return {\n                ...state,\n                users:updateObjectInArray(state.users, action.userId, \"id\", {followed: true})\n            }\n            case UNFOLLOW:\n                return {\n                    ...state,\n                    users:updateObjectInArray(state.users, action.userId, \"id\", {followed: false})\n                }\n                case SET_USERS: {\n                    return {\n                        ...state,\n                        users: action.users\n                    }\n                }\n                case SET_CURRENT_PAGE: {\n                    return {\n                        ...state,\n                        currentPage: action.currentPage\n                    }\n                }\n                case SET_TOTAL_USERS_COUNT: {\n                    return {\n                        ...state,\n                        totalUsersCount: action.count\n                    }\n                }\n                case TOGGLE_IS_FETCHING: {\n\n                    return {\n                        ...state,\n                        isFetching: action.isFetching\n                    }\n                }\n                case TOGGLE_IS_FOLLOWING_PROGRESS: {\n\n                    return {\n                        ...state,\n                        followingIsProgress: action.isFetching ? [...state.followingIsProgress, action.userId] : state.followingIsProgress.filter(id => id != action.userId)\n                    }\n                }\n                default:\n                    return state;\n    }\n}\n\nexport const followSuccess = (userId) => ({\n    type: FOLLOW,\n    userId\n})\nexport const unfollowSuccess = (userId) => ({\n    type: UNFOLLOW,\n    userId\n})\nexport const setUsers = (users) => ({\n    type: SET_USERS,\n    users\n})\nexport const setCurrentPage = (currentPage) => ({\n    type: SET_CURRENT_PAGE,\n    currentPage\n})\nexport const setTotalUsersCount = (totalUsersCount) => ({\n    type: SET_TOTAL_USERS_COUNT,\n    count: totalUsersCount\n})\nexport const toggleIsFetching = (isFetching) => ({\n    type: TOGGLE_IS_FETCHING,\n    isFetching: isFetching\n})\nexport const toggleFollovingProgress = (isFetching, userId) => ({\n    type: TOGGLE_IS_FOLLOWING_PROGRESS,\n    isFetching: isFetching,\n    userId\n})\n\nexport const getUsers = (currentPage, pageSize) => {\n\n    return async (dispatch) => {\n        dispatch(toggleIsFetching(true));\n        dispatch(setCurrentPage(currentPage));\n\n        let data = await usersApi.getUsers(currentPage, pageSize);\n        dispatch(toggleIsFetching(false));\n        dispatch(setUsers(data.items));\n        dispatch(setTotalUsersCount(data.totalCount));\n    }\n}\nexport const FollowUnflowFlow = async (dispatch, userId, ApiMethod, ActionCreator) => {\ndispatch(toggleFollovingProgress(true, userId));\nlet response = await ApiMethod(userId);\n\nif (response.data.resultCode == 0) {\n    dispatch(ActionCreator(userId));\n}\ndispatch(toggleFollovingProgress(false, userId));\n}\n\nexport const follow = (userId) => {\n    return async (dispatch) => {\n\n        FollowUnflowFlow(dispatch, userId, usersApi.follow.bind(usersApi),followSuccess);\n\n        dispatch(toggleFollovingProgress(true, userId));\n       \n    }\n}\n\nexport const unfollow = (userId) => {\n    return async (dispatch) => {\n\n        FollowUnflowFlow(dispatch, userId, usersApi.unfollow.bind(usersApi),unfollowSuccess);\n\n        dispatch(toggleFollovingProgress(true, userId));\n           \n    }\n}\nexport default usersReducer;","import React, { useState } from 'react';\r\nimport styles from './Paginator.module.css';\r\nimport cn from \"classnames\";\r\n\r\nlet Paginator = ({totalItemsCount,pageSize,currentPage,onPageChanged,portisionSize=20}) => {\r\n\r\n    let pagesCount = Math.ceil(totalItemsCount / pageSize);\r\n    let pages = [];\r\n    for (let i = 1; i <= pagesCount; i++) {\r\n        pages.push(i);\r\n    }\r\n    let portionCount = Math.ceil(pagesCount/portisionSize);\r\n    let [portionNumber, setPortionNumber] = useState(1);\r\n    let leftPortionPageNumber = (portionNumber-1)*portisionSize + 1 ;\r\n    let rightPortionPageNumber = portionNumber*portisionSize;\r\n\r\n    return <div className={styles.paginator}>\r\n        {portionNumber > 1 &&\r\n        <button onClick={()=> {setPortionNumber(portionNumber-1)}}>PREV</button>\r\n        }\r\n        {pages\r\n        .filter(p=> p >= leftPortionPageNumber && p<=rightPortionPageNumber)\r\n        .map((p)=> {\r\n            return <span className={cn({\r\n                [styles.selectedPage] : currentPage === p},\r\n                styles.pageNumber) }\r\n                key={p}\r\n                onClick={(e) =>{\r\n                    onPageChanged(p);\r\n                }}> {p}</span>\r\n            })}\r\n            {portionCount > portionNumber && \r\n            <button onClick={()=>{setPortionNumber(portionNumber + 1)} }>NEXT</button>}\r\n                \r\n        </div>\r\n        }\r\nexport default Paginator;","import React from 'react';\r\nimport userPhoto from '../../assets/img/users.png';\r\nimport styles from './users.module.css';\r\nimport { NavLink } from 'react-router-dom';\r\n\r\nlet User = ({user,followingIsProgress,unfollow,follow}) => {\r\nlet useer = user;\r\n    return <div>\r\n            <span>\r\n                    <div>\r\n                        <NavLink to={'profile' + user.id}>\r\n                            <img src={user.photos.small != null ? user.photos.small : userPhoto} className={styles.userPhoto} />\r\n                        </NavLink>\r\n                    </div>\r\n                    <div>\r\n                        {user.followed\r\n                            ? <button disabled={followingIsProgress.some(id => id === user.id)} onClick={() => {unfollow(user.id) }}>\r\n                                Unfollow</button>\r\n                            : <button disabled={followingIsProgress.some(id => id === user.id)} onClick={() => {follow(user.id) }}\r\n                            >Follow</button>}\r\n                    </div>\r\n                </span>\r\n                <span>\r\n                    <span>\r\n                        <div>{user.name}</div>\r\n                        <div>{user.status}</div>\r\n                    </span>\r\n                    <span>\r\n                        <div>{\"user.location.country\"}</div>\r\n                        <div>{\"user.location.city\"}</div>\r\n                    </span>\r\n                </span>\r\n            </div>\r\n        }\r\n   export default User;","import React from 'react';\r\nimport userPhoto from '../../assets/img/users.png';\r\nimport styles from './users.module.css';\r\nimport { NavLink } from 'react-router-dom';\r\nimport Paginator from './Paginator';\r\nimport User from './User';\r\n\r\nlet Users = ({currentPage, onPageChanged, totalUsersCount, pageSize,users,  ...props}) => {\r\n\r\n    return <div>\r\n\r\n        <Paginator currentPage={currentPage} onPageChanged={onPageChanged}\r\n            totalItemsCount={totalUsersCount}\r\n            pageSize={pageSize} />\r\n            <div>\r\n        {\r\n            users.map(u => <User user={u} key={u.id}\r\n                followingIsProgress={props.followingIsProgress}\r\n                unfollow={props.unfollow}\r\n                follow={props.follow}\r\n                />)                                \r\n        }\r\n    </div >\r\n    </div>\r\n}\r\n\r\nexport default Users;","export const requireUsers = (state) => {\n    return state.usersPage.users;\n}\n\nexport const getPageSize = (state) => {\n    return state.usersPage.pageSize;\n}\n\nexport const getTotalUsersCount = (state) => {\n    return state.usersPage.totalUsersCount;\n}\n\nexport const getCurrentPage = (state) => {\n    return state.usersPage.currentPage;\n}\n\nexport const getIsFetching = (state) => {\n    return state.usersPage.isFetching;\n}\n\nexport const getFollowingIsProgress = (state) => {\n    return state.usersPage.followingIsProgress;\n}\n\n","import React from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { follow, unfollow, setCurrentPage,\r\n          toggleFollovingProgress,getUsers } from '../../redux/users-reducer';\r\nimport Users from \"./Users\";\r\nimport * as axios from 'axios';\r\nimport Preloader from '../../components/common/preloader/preloader';\r\nimport {usersApi} from '../../api/api';\r\nimport { compose } from 'redux';\r\nimport { withAuthRedirect } from '../../hoc/withAuthRedirect';\r\nimport { getPageSize, getTotalUsersCount,requireUsers,getCurrentPage,getIsFetching,getFollowingIsProgress } from '../../redux/users-selector';\r\n\r\n\r\n\r\nclass UsersContainer extends React.Component {\r\n\r\n    componentDidMount() {\r\n    const {currentPage,pageSize}=this.props;    \r\n        this.props.getUsers(currentPage,pageSize);\r\n   }\r\n    onPageChanged = (pageNumber) => {\r\n        const {pageSize} = this.props;\r\n        this.props.getUsers(pageNumber, pageSize);        \r\n    }\r\n\r\n    render() {\r\n\r\n        return <>\r\n            {this.props.isFetching ? \r\n            <Preloader/> : null}\r\n            <Users totalUsersCount={this.props.totalUsersCount}\r\n                pageSize={this.props.pageSize}\r\n                currentPage={this.props.currentPage}\r\n                onPageChanged={this.onPageChanged}\r\n                users={this.props.users}\r\n                follow={this.props.follow}\r\n                unfollow={this.props.unfollow}\r\n                followingIsProgress={this.props.followingIsProgress}\r\n            />\r\n        </>\r\n    }\r\n}\r\n\r\n\r\nlet mapStateToProps = (state) => {\r\n    return {\r\n        users: requireUsers(state),\r\n        pageSize: getPageSize(state),\r\n        totalUsersCount: getTotalUsersCount(state),\r\n        currentPage: getCurrentPage(state),\r\n        isFetching: getIsFetching(state),\r\n        followingIsProgress:getFollowingIsProgress(state)\r\n    }\r\n}\r\n\r\n    export default compose(\r\n        withAuthRedirect,\r\n        connect(mapStateToProps, {\r\n            follow,unfollow,\r\n            setCurrentPage,  \r\n            toggleFollovingProgress,\r\n            getUsers})\r\n    ) (UsersContainer);","import React from 'react';\r\nimport { reduxForm } from 'redux-form';\r\nimport { Input } from '../common/FormControls/FormControls';\r\nimport { required } from \"../../utils/validators/validators\";\r\nimport { connect } from 'react-redux';\r\nimport { login } from '../../redux/auth-reducer';\r\nimport { Redirect } from 'react-router-dom';\r\nimport style from \"./../../components/common/FormControls/FormControls.module.css\";\r\nimport { createField } from '../common/FormControls/FormControls';\r\n\r\nconst LoginForm = ({ handleSubmit, error, captchaUrl }) => {\r\n    return (\r\n        <form onSubmit={handleSubmit}>\r\n            {createField(\"Email\", \"email\", [required], Input)}\r\n            {createField(\"Password\", \"password\", [required], Input, { type: \"password\" })}\r\n            {createField(null, \"rememberMe\", [], Input, { type: \"checkbox\" }, \"remember me\")}\r\n\r\n            {captchaUrl && <img src={captchaUrl} />}\r\n            {captchaUrl && createField(\"Simbols from image\", \"captcha\", [required], Input, { }) }\r\n\r\n            {error && <div className={style.formSummaryError}>\r\n                {error}\r\n            </div>\r\n            }\r\n            <div>\r\n                <button>Login</button>\r\n            </div>\r\n        </form>)\r\n}\r\nconst LoginReduxForm = reduxForm({\r\n    form: 'login'\r\n})(LoginForm)\r\nconst Login = (props) => {\r\n    const onSubmit = (formData) => {\r\n        props.login(formData.email, formData.password, formData.rememberMe, formData.captcha);\r\n    }\r\n    if (props.isAuth) {\r\n        return <Redirect to={\"/profile\"} />\r\n    }\r\n    return <div>\r\n        <h1>LOGIN</h1>\r\n        <LoginReduxForm onSubmit={onSubmit} captchaUrl={props.captchaUrl}/>\r\n    </div>\r\n}\r\nconst mapStateToProps = (state) => ({\r\n    captchaUrl:state.auth.captchaUrl,\r\n    isAuth: state.auth.isAuth\r\n})\r\nexport default connect(mapStateToProps, { login })(Login);","import React from 'react';\r\n\r\n\r\n\r\n\r\nexport const withSuspense = (Component) => {\r\n    \r\nreturn(props)=> {\r\nreturn <React.Suspense fallback={<div>Загрузка...</div>}>\r\n<Component {...props}/>\r\n</React.Suspense>\r\n  };\r\n}","import React from 'react';\r\nimport './App.css';\r\nimport HeaderContainer from './components/Header/HeaderContainer';\r\nimport Navbar from './components/Navbar/Navbar';\r\nimport {Route,Switch,Redirect } from \"react-router-dom\";\r\nimport UsersContainer from './components/Users/UsersContainer';\r\nimport LoginPage from './components/login/login';\r\nimport { connect } from 'react-redux';\r\nimport { compose } from 'redux';\r\nimport {withRouter} from 'react-router-dom';\r\nimport {initialaizeApp} from './redux/app-reducer';\r\nimport {withSuspense} from './hoc/withSuspense';\r\n\r\n\r\n// import DialogsContainer from './components/Dialogs/DialogsContainer';\r\n// import ProfileContainer from './components/Profile/ProfileContainer';\r\nconst DialogsContainer = React.lazy(() => import('./components/Dialogs/DialogsContainer'));\r\nconst ProfileContainer = React.lazy(() => import('./components/Profile/ProfileContainer'));\r\n\r\nclass App extends React.Component {  \r\n  componentDidMount() {\r\n    this.props.initialaizeApp();\r\n    }\r\n  render(){\r\n  return (    \r\n    <div className = 'app-wrapper' >\r\n      <HeaderContainer/>\r\n      <Navbar />\r\n      <div className='app-wrapper-content'>\r\n        <Switch>\r\n         <Route exact path='/' render={()=><Redirect to={\"/profile\"}/>} /> \r\n         <Route exact path='/react-app' render={()=><Redirect to={\"/profile\"}/>} />\r\n         <Route path='/profile/:userId?' render = {withSuspense(ProfileContainer)} /> \r\n         <Route path='/dialogs' render = { withSuspense(DialogsContainer)} />\r\n         <Route path='/users' render = { ()=> <UsersContainer/>} />      \r\n         <Route path='/login' render = { ()=> <LoginPage/>} />   \r\n         <Route path='*' render = { ()=><div> 404 NOT FOUND </div> }/> \r\n        </Switch>                \r\n      </div>\r\n    </div>\r\n  )\r\n  }\r\n}\r\n  \r\n    \r\nexport default compose(\r\n  withRouter,\r\n  connect(null, {initialaizeApp})) (App);\r\n","import {authApi} from '../api/api';\nimport { stopSubmit } from 'redux-form';\nimport {getAuthUserData} from './../redux/auth-reducer';\n\nconst SET_INITIALAIZED = 'SET_INITIALAIZED';\n\n\nlet initialState = {\n        initialaized: false       \n};\n const appReducer = (state= initialState, action) => {\n    switch(action.type){\n        case SET_INITIALAIZED:\n            return{\n                ...state,\n                initialaized: true,\n                        \n            }\n       \n        default:\n            return state;\n    }\n}\n\nexport const initialaizedSuccess  = () => ({type: SET_INITIALAIZED});\n\nexport const initialaizeApp = ()=> (dispatch) => {\nlet promise= dispatch(getAuthUserData());\npromise.then(()=>{\n    dispatch(initialaizedSuccess());\n});\n\n}\n\n\nexport default appReducer;","let initialState = {}\n\nconst sidebarReducer = (state = initialState, action) => {\n    return state;\n}\nexport default sidebarReducer;","import profileReducer from \"./profile-reducer\";\nimport sidebarReducer from \"./sidebar-reducer\";\nimport dialogsReducer from \"./dialogs-reducer\";\nimport {createStore, combineReducers, applyMiddleware} from 'redux';\nimport userReducer from \"./users-reducer\";\nimport authReducer from './auth-reducer';\nimport thunkMiddleware from 'redux-thunk';\nimport { reducer as formReducer } from 'redux-form';\nimport {compose } from 'redux';\n\nlet reducers = combineReducers({\n    profilePage:profileReducer,\n    dialogsPage:dialogsReducer,\n    sidebar:sidebarReducer,\n    usersPage:userReducer,\n    auth:authReducer,\n    form:formReducer \n});\n\n const composeEnhancers = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose;\n const store = createStore(reducers, composeEnhancers(applyMiddleware(thunkMiddleware)));\n\nexport default store;","\r\nimport*as serviceWorker from './serviceWorker';  \r\nimport React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport store from './redux/redux-store';\r\nimport { BrowserRouter } from 'react-router-dom';\r\nimport {Provider} from 'react-redux'\r\n\r\n\r\nlet rendererMainThree = (state) =>{\r\n  \r\n  ReactDOM.render(\r\n  <BrowserRouter>\r\n  <Provider store = {store}>\r\n    <App state={state} dispatch={store.dispatch.bind(store)} store={store}/>\r\n  </Provider>  \r\n  </BrowserRouter>,document.getElementById('root'));\r\n  }\r\n\r\nrendererMainThree(store.getState());\r\nstore.subscribe( ()=> {\r\n  let state = store.getState();\r\n  rendererMainThree(state);\r\n});\r\n\r\n\r\nserviceWorker.unregister();\r\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"formControl\":\"FormControls_formControl__18GFo\",\"error\":\"FormControls_error__2LMhc\",\"formSummaryError\":\"FormControls_formSummaryError__1hvFD\"};","export const required = value=>{\r\n    if(value) return undefined;\r\n    return \"Field is required\";\r\n}\r\nexport const maxLengthCreator = (maxLength)=>(value)=> {\r\n    if(value.length>maxLength) return `Max length is ${maxLength} simbols`;\r\n    return undefined;\r\n}\r\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"selectPage\":\"Paginator_selectPage__3N5wZ\"};","module.exports = __webpack_public_path__ + \"static/media/users.ff3d1981.png\";","// extracted by mini-css-extract-plugin\nmodule.exports = {\"userPhoto\":\"users_userPhoto__25y5u\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"header\":\"Header_header__2A1h7\",\"loginBlock\":\"Header_loginBlock__2rDLe\"};","import { stopSubmit } from 'redux-form';\nimport {usersApi,ProfileApi} from '../api/api';\n\nconst ADD_POST = 'ADD-POST';\nconst SET_USER_PROFILE = 'SET_USER_PROFILE';\nconst SET_STATUS = 'SET_STATUS';\nconst SET_PHOTO_SUCCESS = 'SET_PHOTO_SUCCESS';\n\n\nlet initialState = {\n    posts: [{\n            id: '1',\n            message: 'Hi, how are you?',\n            likesCount: '21'\n        },\n        {\n            id: '2',\n            message: 'Its my first post',\n            likesCount: '42'\n        }\n    ],\n    profile: null,\n    status: \"\"\n};\n\n\nconst profileReducer = (state = initialState, action) => {\n    switch (action.type) {\n        case ADD_POST: {\n            let newPost = {\n                id: 5,\n                message: action.newPostText,\n                likesCount: 0\n            };\n            let stateCopy = {\n                ...state,\n                posts: [...state.posts, newPost],\n                newPostText: ''\n            };\n            return stateCopy;\n        }\n\n        case SET_USER_PROFILE: {\n            return {\n                ...state,\n                profile: action.profile\n            }\n        }\n        case SET_STATUS: {\n            return {\n                ...state,\n                status: action.status\n            }\n        }\n        case SET_PHOTO_SUCCESS: {\n                 return {\n                ...state, profile: {...state.profile, photos:action.photos}\n            }\n        }\n        default:\n            return state;\n    }\n}\nexport const addPostActionCreator = (newPostText) => ({\n    type: ADD_POST,\n    newPostText\n})\nexport const setUserProfile = (profile) => ({\n\n    type: SET_USER_PROFILE,\n    profile\n})\nexport const setStatus = (status) => ({\n    type: SET_STATUS,\n    status\n})\nexport const savePhotoSuccess = (photos) => ({\n    type: SET_PHOTO_SUCCESS,\n    photos\n})\nexport const getUserProfile = (userId) => async (dispatch) => {\n    let response = await ProfileApi.getProfile(userId)\n    dispatch(setUserProfile(response.data));\n}\nexport const getStatus = (userId) => async (dispatch) => {\n    let response = await ProfileApi.getStatus(userId);\n    dispatch(setStatus(response.data));\n}\nexport const updateStatus = (status) => async (dispatch) => {\n    let response = await ProfileApi.updateStatus(status)\n\n    if (response.data.resultCode === 0) {\n        dispatch(setStatus(status));\n    }\n}\nexport const savePhoto = (file) => async (dispatch) => {\n    debugger\n    let response = await ProfileApi.savePhoto(file)\n\n    if (response.data.resultCode === 0) {\n        dispatch(savePhotoSuccess(response.data.data.photos));\n    }\n}\nexport const safeProfile = (profile) => async (dispatch, getState) => {\n    const userId = getState().auth.userId;\n    const response = await ProfileApi.safeProfile(profile);\n    if (response.data.resultCode === 0) {\n        dispatch(getUserProfile(userId));\n    }\n    else{\n        debugger;\n        dispatch(stopSubmit(\"edit-profile\",{_error: response.data.messages[0] }));\n    }\n}\nexport default profileReducer;"],"sourceRoot":""}