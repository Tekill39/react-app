{"version":3,"sources":["components/common/preloader/preloader.js","api/api.js","redux/dialogs-reducer.js","assets/img/805.svg","components/Navbar/Navbar.module.css","serviceWorker.js","components/Header/Header.jsx","redux/auth-reducer.js","components/Header/HeaderContainer.jsx","components/Navbar/Navbar.jsx","utils/validators/object-helpers.js","redux/users-reducer.js","components/Users/Paginator.jsx","components/Users/User.jsx","components/Users/Users.jsx","redux/users-selector.js","components/Users/UsersContainer.jsx","components/login/login.jsx","hoc/withSuspense.js","App.js","redux/app-reducer.js","redux/sidebar-reducer.js","redux/redux-store.js","index.js","components/common/FormControls/FormControls.module.css","components/common/FormControls/FormControls.js","components/Users/Paginator.module.css","utils/validators/validators.js","assets/img/users.png","components/Users/users.module.css","components/Header/Header.module.css","hoc/withAuthRedirect.js","redux/profile-reducer.js"],"names":["Preloader","props","style","backgroundColor","src","preloaderPhoto","instanse","axios","withCredentials","baseURL","headers","usersApi","getUsers","currentPage","pageSize","get","then","response","data","follow","userId","post","unfollow","delete","ProfileApi","getProfile","getStatus","updateStatus","status","put","authApi","me","login","email","password","rememberMe","logout","initialState","dialogs","id","name","message","sendMessageCreator","newMessageBody","type","dialogsReducer","state","action","body","module","exports","Boolean","window","location","hostname","match","Header","className","classes","header","loginBlock","isAuth","onClick","to","setAuthUserData","payload","getAuthUserData","dispatch","a","resultCode","authReducer","HeaderContainer","this","React","Component","connect","auth","Navbar","nav","new","activeClassName","activeLink","updateObjectInArray","items","itemId","objPropName","newObjectProps","map","u","users","totalUsersCount","isFetching","followingIsProgress","followSuccess","unfollowSuccess","setCurrentPage","toggleIsFetching","toggleFollovingProgress","FollowUnflowFlow","ApiMethod","ActionCreator","usersReducer","followed","count","filter","Paginator","totalItemsCount","onPageChanged","portisionSize","pagesCount","Math","ceil","pages","i","push","portionCount","useState","portionNumber","setPortionNumber","leftPortionPageNumber","rightPortionPageNumber","styles","paginator","p","cn","selectedPage","pageNumber","key","e","User","user","photos","small","userPhoto","disabled","some","Users","requireUsers","usersPage","getPageSize","getTotalUsersCount","getCurrentPage","getIsFetching","getFollowingIsProgress","UsersContainer","compose","withAuthRedirect","bind","totalCount","LoginReduxForm","reduxForm","form","onSubmit","handleSubmit","Field","placeholder","component","Input","validate","required","error","formSummaryError","messages","length","stopSubmit","_error","formData","withSuspense","Suspense","fallback","DialogsContainer","lazy","ProfileContainer","App","initialaizeApp","path","render","withRouter","sidebarReducer","reducers","combineReducers","profilePage","profileReducer","dialogsPage","sidebar","userReducer","formReducer","composeEnhancers","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","store","createStore","applyMiddleware","thunkMiddleware","rendererMainThree","ReactDOM","document","getElementById","getState","subscribe","navigator","serviceWorker","ready","registration","unregister","catch","console","Textarea","input","meta","hasError","touched","formControl","value","maxLengthCreator","maxLength","mapStateToPropsRedirect","RedirectComponent","posts","likesCount","profile","addPostActionCreator","newPostText","setStatus","getUserProfile","newPost","stateCopy"],"mappings":"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","file":"static/js/main.276c71aa.chunk.js","sourcesContent":["import React from 'react';\r\nimport preloaderPhoto from '../../../assets/img/805.svg';\r\n\r\n\r\nlet Preloader=(props)=>{\r\n\r\nreturn <div style = { {backgroundColor:'white'}}>\r\n            <img src={preloaderPhoto} />\r\n        </div>\r\n}\r\n\r\n\r\nexport default Preloader;","import * as axios from 'axios';\r\n\r\nconst instanse = axios.create({\r\n    withCredentials: true,\r\n    baseURL: 'https://social-network.samuraijs.com/api/1.0/',\r\n    headers: {\r\n        \"API-KEY\": \"5ddf4a85-1e89-471a-ab29-3d974a9b9967\"\r\n    }\r\n});\r\n\r\nexport const usersApi = {\r\n    getUsers(currentPage = 1, pageSize = 10) {\r\n\r\n        return instanse.get(`users?page=${currentPage}&count=${pageSize}`)\r\n            .then(response => {\r\n                return response.data;\r\n            });\r\n    },\r\n    follow(userId) {\r\n        return instanse.post(`follow/${userId}`)\r\n    },\r\n    unfollow(userId) {\r\n        return instanse.delete(`follow/${userId}`)\r\n    }\r\n}\r\n\r\nexport const ProfileApi = {\r\n    getProfile(userId) {\r\n        return instanse.get(`profile/` + userId);\r\n    },\r\n    getStatus(userId) {\r\n        return instanse.get(`profile/status/` + userId);\r\n    },\r\n    updateStatus(status) {\r\n        return instanse.put(`profile/status/`, {\r\n            status: status\r\n        });\r\n    }\r\n}\r\nexport const authApi = {\r\n    me() {\r\n        return instanse.get(`auth/me`)\r\n    },\r\n    login(email, password, rememberMe = false) {\r\n        return instanse.post(`auth/login`, {\r\n            email,\r\n            password,\r\n            rememberMe\r\n        });\r\n    },\r\n    logout() {\r\n        return instanse.delete(`auth/login`);\r\n    }\r\n}\r\n","\nconst SEND_MESSAGE = 'SEND-MESSAGE';\nlet initialState = {\n    dialogs: [{\n        id: '1',\n        name: 'Misha'\n      },\n      {\n        id: '2',\n        name: 'Dima'\n      },\n      {\n        id: '3',\n        name: 'Masha'\n      },\n      {\n        id: '4',\n        name: 'Sasha'\n      },\n      {\n        id: '5',\n        name: 'Maxim'\n      },\n      {\n        id: '6',\n        name: 'Toma'\n      }\n    ],\n\n    message: [{\n        id: '1',\n        message: 'How are you'\n      },\n      {\n        id: '2',\n        message: 'So far, so good'\n      },\n      {\n        id: '3',\n        message: 'Hello'\n      },\n      {\n        id: '4',\n        message: 'Ok'\n      },\n      {\n        id: '5',\n        message: 'Hi'\n      },\n      {\n        id: '6',\n        message: 'Do you like react?'\n      }\n    ]\n};\n\nconst dialogsReducer = (state = initialState, action) => {\n\n     switch (action.type) {\n                 \n        case SEND_MESSAGE:\n            let body = action.newMessageBody;\n            return {\n              ...state,\n              message: [...state.message, {id: 6, message: body}]\n            };\n        default:\n            return state;\n    }\n}\nexport const sendMessageCreator = (newMessageBody) => ({\n    type: SEND_MESSAGE,newMessageBody\n})\n\nexport default dialogsReducer;","module.exports = __webpack_public_path__ + \"static/media/805.c3fb1e43.svg\";","// extracted by mini-css-extract-plugin\nmodule.exports = {\"nav\":\"Navbar_nav__3BNt5\",\"new\":\"Navbar_new__1PYdH\",\"activeLink\":\"Navbar_activeLink__2v8Nq\"};","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\r\nimport classes from './Header.module.css'\r\nimport { NavLink } from 'react-router-dom';\r\n\r\nconst Header = (props) => {\r\n    return (\r\n        <header className={classes.header}>\r\n            Header\r\n            <div className={classes.loginBlock}>\r\n                {props.isAuth\r\n                 ? <div>{props.login}<button onClick={props.logout}>Log out</button></div>\r\n                : <NavLink to={'/login'}>Login</NavLink>}\r\n            </div>\r\n        </header>\r\n    );\r\n} \r\nexport default Header;","import {authApi} from '../api/api';\nimport {stopSubmit} from 'redux-form';\n\nconst SET_USER_DATA = 'SET_USER_DATA';\n\n\nlet initialState = {\n    userId: null,\n    email: null,\n    login: null,\n    isAuth: false\n\n};\nconst authReducer = (state = initialState, action) => {\n    switch (action.type) {\n        case SET_USER_DATA:\n            return {\n                ...state,\n                ...action.payload,\n\n            }\n\n            default:\n                return state;\n    }\n}\n\nexport const setAuthUserData = (userId, email, login, isAuth) => ({\n    type: SET_USER_DATA,\n    payload: {userId,email,login,isAuth}\n})\n\nexport const getAuthUserData = () => async (dispatch) => {\n    let response = await authApi.me();\n\n    if (response.data.resultCode === 0) {\n        let {id,login,email\n        } = response.data.data;\n        dispatch(setAuthUserData(id, email, login, true));\n    }\n}\n\nexport const login = (email, password, rememberMe) => async (dispatch) => {\n    let response = await authApi.login(email, password, rememberMe);\n    if (response.data.resultCode === 0) {\n        dispatch(getAuthUserData());\n    } else {\n        let message = response.data.messages.length > 0 ? response.data.message[0] : \"Some error\";\n        dispatch(stopSubmit(\"login\", {\n            _error: message\n        }));\n    }\n}\nexport const logout = () => async (dispatch) => {\n    let response = await authApi.logout();\n\n    if (response.data.resultCode === 0) {\n        dispatch(setAuthUserData(null, null, null, false));\n    }\n}\n\nexport default authReducer;","import React from 'react';\r\nimport Header from './Header';\r\nimport { connect } from 'react-redux';\r\nimport {logout} from '../../redux/auth-reducer';\r\n\r\n\r\n\r\nclass HeaderContainer extends React.Component {\r\n\r\n    \r\n\r\n    render() {\r\n        return <Header{...this.props} />\r\n    }\r\n}\r\nconst mapStateToProps = (state) => ({\r\n    isAuth:state.auth.isAuth,\r\n    login:state.auth.login,\r\n});\r\nexport default connect(mapStateToProps, {logout})(HeaderContainer);","import React from 'react';\r\nimport classes from './Navbar.module.css';\r\nimport { NavLink } from 'react-router-dom';\r\n\r\nconst Navbar = () => {\r\n    return (\r\n        <nav className={classes.nav}>\r\n            <div className={classes.new}>\r\n                <NavLink to = '/profile' activeClassName={classes.activeLink}>Profile</NavLink>\r\n            </div>\r\n            <div className={classes.new}>\r\n                <NavLink to = '/dialogs' activeClassName={classes.activeLink}>Messages</NavLink>\r\n            </div>\r\n            <div className={classes.new}>\r\n                <NavLink to = '/users' activeClassName={classes.activeLink}>Users</NavLink>\r\n            </div>\r\n            <div className={classes.new}>\r\n                <a>News</a>\r\n            </div>\r\n            <div className={classes.new}>\r\n                <a>Music</a>\r\n            </div>\r\n            <div className={classes.new}>\r\n                <a>Settings</a>\r\n            </div>\r\n        </nav>\r\n    );\r\n}\r\nexport default Navbar;","export const updateObjectInArray = (items, itemId, objPropName, newObjectProps)=>{\r\nreturn items.map(u => {\r\n    if (u[objPropName] === itemId) {\r\n        return {...u, ...newObjectProps}\r\n    }\r\n    return u;\r\n})\r\n} \r\nexport default updateObjectInArray;\r\n","import {\n    usersApi\n} from '../api/api';\nimport updateObjectInArray from './../utils/validators/object-helpers';\nimport cn from \"classnames\";\n\nconst FOLLOW = 'FOLLOW';\nconst UNFOLLOW = 'UNFOLLOW';\nconst SET_USERS = 'SET_USERS';\nconst SET_CURRENT_PAGE = 'SET_CURRENT_PAGE';\nconst SET_TOTAL_USERS_COUNT = 'SET_TOTAL_USERS_COUNT';\nconst TOGGLE_IS_FETCHING = 'TOGGLE_IS_FETCHING';\nconst TOGGLE_IS_FOLLOWING_PROGRESS = 'TOGGLE_IS_FOLLOWING_PROGRESS';\n\n\n\nlet initialState = {\n    users: [],\n    totalUsersCount: 0,\n    pageSize: 15,\n    currentPage: 1,\n    isFetching: true,\n    followingIsProgress: []\n};\nconst usersReducer = (state = initialState, action) => {\n    switch (action.type) {\n        case FOLLOW:\n            return {\n                ...state,\n                users:updateObjectInArray(state.users, action.userId, \"id\", {followed: true})\n            }\n            case UNFOLLOW:\n                return {\n                    ...state,\n                    users:updateObjectInArray(state.users, action.userId, \"id\", {followed: false})\n                }\n                case SET_USERS: {\n                    return {\n                        ...state,\n                        users: action.users\n                    }\n                }\n                case SET_CURRENT_PAGE: {\n                    return {\n                        ...state,\n                        currentPage: action.currentPage\n                    }\n                }\n                case SET_TOTAL_USERS_COUNT: {\n                    return {\n                        ...state,\n                        totalUsersCount: action.count\n                    }\n                }\n                case TOGGLE_IS_FETCHING: {\n\n                    return {\n                        ...state,\n                        isFetching: action.isFetching\n                    }\n                }\n                case TOGGLE_IS_FOLLOWING_PROGRESS: {\n\n                    return {\n                        ...state,\n                        followingIsProgress: action.isFetching ? [...state.followingIsProgress, action.userId] : state.followingIsProgress.filter(id => id != action.userId)\n                    }\n                }\n                default:\n                    return state;\n    }\n}\n\nexport const followSuccess = (userId) => ({\n    type: FOLLOW,\n    userId\n})\nexport const unfollowSuccess = (userId) => ({\n    type: UNFOLLOW,\n    userId\n})\nexport const setUsers = (users) => ({\n    type: SET_USERS,\n    users\n})\nexport const setCurrentPage = (currentPage) => ({\n    type: SET_CURRENT_PAGE,\n    currentPage\n})\nexport const setTotalUsersCount = (totalUsersCount) => ({\n    type: SET_TOTAL_USERS_COUNT,\n    count: totalUsersCount\n})\nexport const toggleIsFetching = (isFetching) => ({\n    type: TOGGLE_IS_FETCHING,\n    isFetching: isFetching\n})\nexport const toggleFollovingProgress = (isFetching, userId) => ({\n    type: TOGGLE_IS_FOLLOWING_PROGRESS,\n    isFetching: isFetching,\n    userId\n})\n\nexport const getUsers = (currentPage, pageSize) => {\n\n    return async (dispatch) => {\n        dispatch(toggleIsFetching(true));\n        dispatch(setCurrentPage(currentPage));\n\n        let data = await usersApi.getUsers(currentPage, pageSize);\n        dispatch(toggleIsFetching(false));\n        dispatch(setUsers(data.items));\n        dispatch(setTotalUsersCount(data.totalCount));\n    }\n}\nexport const FollowUnflowFlow = async (dispatch, userId, ApiMethod, ActionCreator) => {\ndispatch(toggleFollovingProgress(true, userId));\nlet response = await ApiMethod(userId);\n\nif (response.data.resultCode == 0) {\n    dispatch(ActionCreator(userId));\n}\ndispatch(toggleFollovingProgress(false, userId));\n}\n\nexport const follow = (userId) => {\n    return async (dispatch) => {\n\n        FollowUnflowFlow(dispatch, userId, usersApi.follow.bind(usersApi),followSuccess);\n\n        dispatch(toggleFollovingProgress(true, userId));\n       \n    }\n}\n\nexport const unfollow = (userId) => {\n    return async (dispatch) => {\n\n        FollowUnflowFlow(dispatch, userId, usersApi.unfollow.bind(usersApi),unfollowSuccess);\n\n        dispatch(toggleFollovingProgress(true, userId));\n           \n    }\n}\nexport default usersReducer;","import React, { useState } from 'react';\r\nimport styles from './Paginator.module.css';\r\nimport cn from \"classnames\";\r\n\r\nlet Paginator = ({totalItemsCount,pageSize,currentPage,onPageChanged,portisionSize=20}) => {\r\n\r\n    let pagesCount = Math.ceil(totalItemsCount / pageSize);\r\n    let pages = [];\r\n    for (let i = 1; i <= pagesCount; i++) {\r\n        pages.push(i);\r\n    }\r\n    let portionCount = Math.ceil(pagesCount/portisionSize);\r\n    let [portionNumber, setPortionNumber] = useState(1);\r\n    let leftPortionPageNumber = (portionNumber-1)*portisionSize + 1 ;\r\n    let rightPortionPageNumber = portionNumber*portisionSize;\r\n\r\n    return <div className={styles.paginator}>\r\n        {portionNumber > 1 &&\r\n        <button onClick={()=> {setPortionNumber(portionNumber-1)}}>PREV</button>\r\n        }\r\n        {pages\r\n        .filter(p=> p >= leftPortionPageNumber && p<=rightPortionPageNumber)\r\n        .map((p)=> {\r\n            return <span className={cn({\r\n                [styles.selectedPage] : currentPage === p},\r\n                styles.pageNumber) }\r\n                key={p}\r\n                onClick={(e) =>{\r\n                    onPageChanged(p);\r\n                }}> {p}</span>\r\n            })}\r\n            {portionCount > portionNumber && \r\n            <button onClick={()=>{setPortionNumber(portionNumber + 1)} }>NEXT</button>}\r\n                \r\n        </div>\r\n        }\r\nexport default Paginator;","import React from 'react';\r\nimport userPhoto from '../../assets/img/users.png';\r\nimport styles from './users.module.css';\r\nimport { NavLink } from 'react-router-dom';\r\n\r\nlet User = ({user,followingIsProgress,unfollow,follow}) => {\r\nlet useer = user;\r\n    return <div>\r\n            <span>\r\n                    <div>\r\n                        <NavLink to={'profile' + user.id}>\r\n                            <img src={user.photos.small != null ? user.photos.small : userPhoto} className={styles.userPhoto} />\r\n                        </NavLink>\r\n                    </div>\r\n                    <div>\r\n                        {user.followed\r\n                            ? <button disabled={followingIsProgress.some(id => id === user.id)} onClick={() => {unfollow(user.id) }}>\r\n                                Unfollow</button>\r\n                            : <button disabled={followingIsProgress.some(id => id === user.id)} onClick={() => {follow(user.id) }}\r\n                            >Follow</button>}\r\n                    </div>\r\n                </span>\r\n                <span>\r\n                    <span>\r\n                        <div>{user.name}</div>\r\n                        <div>{user.status}</div>\r\n                    </span>\r\n                    <span>\r\n                        <div>{\"user.location.country\"}</div>\r\n                        <div>{\"user.location.city\"}</div>\r\n                    </span>\r\n                </span>\r\n            </div>\r\n        }\r\n   export default User;","import React from 'react';\r\nimport userPhoto from '../../assets/img/users.png';\r\nimport styles from './users.module.css';\r\nimport { NavLink } from 'react-router-dom';\r\nimport Paginator from './Paginator';\r\nimport User from './User';\r\n\r\nlet Users = ({currentPage, onPageChanged, totalUsersCount, pageSize,users,  ...props}) => {\r\n\r\n    return <div>\r\n\r\n        <Paginator currentPage={currentPage} onPageChanged={onPageChanged}\r\n            totalItemsCount={totalUsersCount}\r\n            pageSize={pageSize} />\r\n            <div>\r\n        {\r\n            users.map(u => <User user={u} key={u.id}\r\n                followingIsProgress={props.followingIsProgress}\r\n                unfollow={props.unfollow}\r\n                follow={props.follow}\r\n                />)                                \r\n        }\r\n    </div >\r\n    </div>\r\n}\r\n\r\nexport default Users;","export const requireUsers = (state) => {\n    return state.usersPage.users;\n}\n\nexport const getPageSize = (state) => {\n    return state.usersPage.pageSize;\n}\n\nexport const getTotalUsersCount = (state) => {\n    return state.usersPage.totalUsersCount;\n}\n\nexport const getCurrentPage = (state) => {\n    return state.usersPage.currentPage;\n}\n\nexport const getIsFetching = (state) => {\n    return state.usersPage.isFetching;\n}\n\nexport const getFollowingIsProgress = (state) => {\n    return state.usersPage.followingIsProgress;\n}\n\n","import React from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { follow, unfollow, setCurrentPage,\r\n          toggleFollovingProgress,getUsers } from '../../redux/users-reducer';\r\nimport Users from \"./Users\";\r\nimport * as axios from 'axios';\r\nimport Preloader from '../../components/common/preloader/preloader';\r\nimport {usersApi} from '../../api/api';\r\nimport { compose } from 'redux';\r\nimport { withAuthRedirect } from '../../hoc/withAuthRedirect';\r\nimport { getPageSize, getTotalUsersCount,requireUsers,getCurrentPage,getIsFetching,getFollowingIsProgress } from '../../redux/users-selector';\r\n\r\n\r\n\r\nclass UsersContainer extends React.Component {\r\n\r\n    componentDidMount() {\r\n    const {currentPage,pageSize}=this.props;    \r\n        this.props.getUsers(currentPage,pageSize);\r\n   }\r\n    onPageChanged = (pageNumber) => {\r\n        const {pageSize} = this.props;\r\n        this.props.getUsers(pageNumber, pageSize);        \r\n    }\r\n\r\n    render() {\r\n\r\n        return <>\r\n            {this.props.isFetching ? \r\n            <Preloader/> : null}\r\n            <Users totalUsersCount={this.props.totalUsersCount}\r\n                pageSize={this.props.pageSize}\r\n                currentPage={this.props.currentPage}\r\n                onPageChanged={this.onPageChanged}\r\n                users={this.props.users}\r\n                follow={this.props.follow}\r\n                unfollow={this.props.unfollow}\r\n                followingIsProgress={this.props.followingIsProgress}\r\n            />\r\n        </>\r\n    }\r\n}\r\n\r\n\r\nlet mapStateToProps = (state) => {\r\n    return {\r\n        users: requireUsers(state),\r\n        pageSize: getPageSize(state),\r\n        totalUsersCount: getTotalUsersCount(state),\r\n        currentPage: getCurrentPage(state),\r\n        isFetching: getIsFetching(state),\r\n        followingIsProgress:getFollowingIsProgress(state)\r\n    }\r\n}\r\n\r\n    export default compose(\r\n        withAuthRedirect,\r\n        connect(mapStateToProps, {\r\n            follow,unfollow,\r\n            setCurrentPage,  \r\n            toggleFollovingProgress,\r\n            getUsers})\r\n    ) (UsersContainer);","import React from 'react';\r\nimport { reduxForm } from 'redux-form';\r\nimport { Field } from 'redux-form'; \r\nimport {Input} from '../common/FormControls/FormControls';\r\nimport {required} from \"../../utils/validators/validators\";\r\nimport { connect } from 'react-redux';\r\nimport {login} from '../../redux/auth-reducer';\r\nimport { Redirect } from 'react-router-dom';\r\nimport style from \"./../../components/common/FormControls/FormControls.module.css\";\r\n\r\nconst LoginForm = (props) => {\r\n    return( \r\n    <form onSubmit={props.handleSubmit}>\r\n        <div>\r\n            <Field placeholder={\"Email\"} component={Input}\r\n            validate={[required]} name={\"email\"}/>\r\n        </div>\r\n        <div>\r\n        <Field placeholder={\"Password\"} component={Input} type={\"password\"} \r\n        validate={[required]} name={\"password\"}/>\r\n        </div>\r\n        <div>\r\n        <Field component={Input}  name={\"rememberMe\"} type={\"checkbox\"} />remember me\r\n        </div>\r\n        {props.error && <div className={style.formSummaryError}>\r\n    {props.error}\r\n        </div>\r\n        }\r\n        <div>\r\n            <button>Login</button>\r\n        </div>\r\n    </form>)   \r\n}\r\nconst LoginReduxForm = reduxForm({\r\n    form:'login'\r\n}) (LoginForm)\r\nconst Login = (props) => {\r\n    const onSubmit = (formData) =>{\r\n        props.login(formData.email, formData.password, formData.rememberMe);\r\n    }\r\n    if(props.isAuth) {\r\n        return <Redirect to={\"/profile\"}/>\r\n    }\r\n    return <div>\r\n        <h1>LOGIN</h1>\r\n    <LoginReduxForm onSubmit={onSubmit}/>\r\n    </div>\r\n}\r\nconst mapStateToProps = (state) => ({\r\n    isAuth:state.auth.isAuth\r\n })\r\nexport  default connect(mapStateToProps ,{login}) (Login);","import React from 'react';\r\n\r\n\r\n\r\n\r\nexport const withSuspense = (Component) => {\r\n    \r\nreturn(props)=> {\r\nreturn <React.Suspense fallback={<div>Загрузка...</div>}>\r\n<Component {...props}/>\r\n</React.Suspense>\r\n  };\r\n}","import React from 'react';\r\nimport './App.css';\r\nimport HeaderContainer from './components/Header/HeaderContainer';\r\nimport Navbar from './components/Navbar/Navbar';\r\nimport {Route} from \"react-router-dom\";\r\nimport UsersContainer from './components/Users/UsersContainer';\r\nimport LoginPage from './components/login/login';\r\nimport { connect } from 'react-redux';\r\nimport { compose } from 'redux';\r\nimport {withRouter} from 'react-router-dom';\r\nimport {initialaizeApp} from './redux/app-reducer';\r\nimport {withSuspense} from './hoc/withSuspense';\r\n\r\n\r\n// import DialogsContainer from './components/Dialogs/DialogsContainer';\r\n// import ProfileContainer from './components/Profile/ProfileContainer';\r\nconst DialogsContainer = React.lazy(() => import('./components/Dialogs/DialogsContainer'));\r\nconst ProfileContainer = React.lazy(() => import('./components/Profile/ProfileContainer'));\r\n\r\nclass App extends React.Component {  \r\n  componentDidMount() {\r\n    this.props.initialaizeApp();\r\n    }\r\n  render(){\r\n  return (    \r\n    <div className = 'app-wrapper' >\r\n      <HeaderContainer/>\r\n      <Navbar />\r\n      <div className='app-wrapper-content'>\r\n         <Route path='/profile/:userId?' render = {withSuspense(ProfileContainer)} /> \r\n         <Route path='/dialogs' render = { withSuspense(DialogsContainer)} />\r\n         <Route path='/users' render = { ()=> <UsersContainer/>} />      \r\n         <Route path='/login' render = { ()=> <LoginPage/>} />                  \r\n      </div>\r\n    </div>\r\n  )\r\n  }\r\n}\r\n  \r\n    \r\nexport default compose(\r\n  withRouter,\r\n  connect(null, {initialaizeApp})) (App);\r\n","import {authApi} from '../api/api';\nimport { stopSubmit } from 'redux-form';\nimport {getAuthUserData} from './../redux/auth-reducer';\n\nconst SET_INITIALAIZED = 'SET_INITIALAIZED';\n\n\nlet initialState = {\n        initialaized: false       \n};\n const appReducer = (state= initialState, action) => {\n    switch(action.type){\n        case SET_INITIALAIZED:\n            return{\n                ...state,\n                initialaized: true,\n                        \n            }\n       \n        default:\n            return state;\n    }\n}\n\nexport const initialaizedSuccess  = () => ({type: SET_INITIALAIZED});\n\nexport const initialaizeApp = ()=> (dispatch) => {\nlet promise= dispatch(getAuthUserData());\npromise.then(()=>{\n    dispatch(initialaizedSuccess());\n});\n\n}\n\n\nexport default appReducer;","let initialState = {}\n\nconst sidebarReducer = (state = initialState, action) => {\n    return state;\n}\nexport default sidebarReducer;","import profileReducer from \"./profile-reducer\";\nimport sidebarReducer from \"./sidebar-reducer\";\nimport dialogsReducer from \"./dialogs-reducer\";\nimport {createStore, combineReducers, applyMiddleware} from 'redux';\nimport userReducer from \"./users-reducer\";\nimport authReducer from './auth-reducer';\nimport thunkMiddleware from 'redux-thunk';\nimport { reducer as formReducer } from 'redux-form';\nimport {compose } from 'redux';\n\nlet reducers = combineReducers({\n    profilePage:profileReducer,\n    dialogsPage:dialogsReducer,\n    sidebar:sidebarReducer,\n    usersPage:userReducer,\n    auth:authReducer,\n    form:formReducer \n});\n\n const composeEnhancers = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose;\n const store = createStore(reducers, composeEnhancers(applyMiddleware(thunkMiddleware)));\n\nexport default store;","\r\nimport*as serviceWorker from './serviceWorker';  \r\nimport React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport store from './redux/redux-store';\r\nimport { BrowserRouter } from 'react-router-dom';\r\nimport {Provider} from 'react-redux'\r\n\r\n\r\nlet rendererMainThree = (state) =>{\r\n  \r\n  ReactDOM.render(\r\n  <BrowserRouter>\r\n  <Provider store = {store}>\r\n    <App state={state} dispatch={store.dispatch.bind(store)} store={store}/>\r\n  </Provider>  \r\n  </BrowserRouter>,document.getElementById('root'));\r\n  }\r\n\r\nrendererMainThree(store.getState());\r\nstore.subscribe( ()=> {\r\n  let state = store.getState();\r\n  rendererMainThree(state);\r\n});\r\n\r\n\r\nserviceWorker.unregister();\r\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"formControl\":\"FormControls_formControl__18GFo\",\"error\":\"FormControls_error__2LMhc\",\"formSummaryError\":\"FormControls_formSummaryError__1hvFD\"};","import React from 'react';\r\nimport styles from './../FormControls/FormControls.module.css';\r\n\r\n\r\nexport const Textarea=({input, meta, ...props}) => {\r\n    const hasError = meta.touched && meta.error;\r\n    return(\r\n        <div className={styles.formControl + \" \" + (hasError ? styles.error : \"\")}>\r\n        <div>\r\n            <textarea {...input} {...props}/>          \r\n        </div>\r\n        {hasError && <span>{meta.error}</span>}\r\n        </div>\r\n    )\r\n}\r\nexport const Input=({input, meta, ...props}) => {\r\n    const hasError = meta.touched && meta.error;\r\n    return(\r\n        <div className={styles.formControl + \" \" + (hasError ? styles.error : \"\")}>\r\n        <div>\r\n            <textarea {...input} {...props}/>          \r\n        </div>\r\n        {hasError && <span>{meta.error}</span>}\r\n        </div>\r\n    )\r\n}","// extracted by mini-css-extract-plugin\nmodule.exports = {\"selectPage\":\"Paginator_selectPage__3N5wZ\"};","export const required = value=>{\r\n    if(value) return undefined;\r\n    return \"Field is required\";\r\n}\r\nexport const maxLengthCreator = (maxLength)=>(value)=> {\r\n    if(value.length>maxLength) return `Max length is ${maxLength} simbols`;\r\n    return undefined;\r\n}\r\n","module.exports = __webpack_public_path__ + \"static/media/users.ff3d1981.png\";","// extracted by mini-css-extract-plugin\nmodule.exports = {\"userPhoto\":\"users_userPhoto__25y5u\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"header\":\"Header_header__2A1h7\",\"loginBlock\":\"Header_loginBlock__2rDLe\"};","import React from 'react';\r\nimport {Redirect} from 'react-router-dom'; \r\nimport { connect } from 'react-redux';\r\n\r\nlet mapStateToPropsRedirect = (state) =>({\r\n    isAuth:state.auth.isAuth\r\n});\r\n\r\nexport const withAuthRedirect = (Component) => {\r\n    class RedirectComponent extends React.Component {\r\n        render(){\r\n        if (!this.props.isAuth) return <Redirect to = '/login' />\r\n            return <Component {...this.props}/>\r\n    }\r\n}\r\n\r\nlet ConnectedAuthredirectComponent = connect(mapStateToPropsRedirect) (RedirectComponent);\r\nreturn ConnectedAuthredirectComponent;\r\n}","import {\n    usersApi,\n    ProfileApi\n} from '../api/api';\n\nconst ADD_POST = 'ADD-POST';\nconst SET_USER_PROFILE = 'SET_USER_PROFILE';\nconst SET_STATUS = 'SET_STATUS';\n\n\nlet initialState = {\n    posts: [{\n            id: '1',\n            message: 'Hi, how are you?',\n            likesCount: '21'\n        },\n        {\n            id: '2',\n            message: 'Its my first post',\n            likesCount: '42'\n        }\n    ],\n    profile: null,\n    status: \"\"\n};\n\n\nconst profileReducer = (state = initialState, action) => {\n    switch (action.type) {\n        case ADD_POST: {\n            let newPost = {\n                id: 5,\n                message: action.newPostText,\n                likesCount: 0\n            };\n            let stateCopy = {\n                ...state,\n                posts: [...state.posts, newPost],\n                newPostText: ''\n            };\n            return stateCopy;\n        }\n\n        case SET_USER_PROFILE: {\n            return {\n                ...state,\n                profile: action.profile\n            }\n        }\n        case SET_STATUS: {\n            return {\n                ...state,\n                status: action.status\n            }\n        }\n        default:\n            return state;\n    }\n}\nexport const addPostActionCreator = (newPostText) => ({\n    type: ADD_POST,\n    newPostText\n})\n\n\nexport const setUserProfile = (profile) => ({\n\n    type: SET_USER_PROFILE,\n    profile\n})\nexport const setStatus = (status) => ({\n    type: SET_STATUS,\n    status\n})\n\nexport const getUserProfile = (userId) => async (dispatch) => {\n    let response = await ProfileApi.getProfile(userId)\n    dispatch(setUserProfile(response.data));\n}\nexport const getStatus = (userId) => async (dispatch) => {\n    let response = await ProfileApi.getStatus(userId);\n    dispatch(setStatus(response.data));\n}\nexport const updateStatus = (status) => async (dispatch) => {\n   let response = await ProfileApi.updateStatus(status)\n        \n            if (response.data.resultCode === 0) {\n                dispatch(setStatus(status));\n            }\n        }\n\nexport default profileReducer;"],"sourceRoot":""}