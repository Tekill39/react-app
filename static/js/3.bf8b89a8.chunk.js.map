{"version":3,"sources":["components/Profile/MyPosts/MyPosts.module.css","components/Profile/MyPosts/Posts/Posts.module.css","components/Profile/ProfileInfo/ProfileInfo.module.css","components/Profile/MyPosts/Posts/Posts.jsx","components/Profile/MyPosts/MyPosts.jsx","components/Profile/MyPosts/MyPostsContainer.js","components/Profile/ProfileInfo/ProfileStatusWithHoooks.jsx","components/Profile/ProfileInfo/ProfileDataForm.jsx","components/Profile/ProfileInfo/ProfileInfo.jsx","components/Profile/Profile.jsx","components/Profile/ProfileContainer.jsx"],"names":["module","exports","Posts","props","className","classes","itemPosts","message","src","alt","likesCount","MyPosts","React","memo","console","log","PostsElements","posts","map","p","createRef","content","posts_title","AddNewPostForm","onSubmit","values","addPost","newPostText","maxLength10","maxLengthCreator","handleSubmit","Field","name","component","Textarea","validate","required","reduxForm","form","MyPostsContainer","connect","state","profilePage","dispatch","addPostActionCreator","ProfileStatusWithHoooks","useState","editMode","setEditMode","status","setStatus","useEffect","onDoubleClick","onChange","e","currentTarget","value","autoFocus","onBlur","updateStatus","ProfileDataFormReduxForm","profile","createField","Input","type","Object","keys","contacts","key","Contact","contactTitle","conactValue","contact","ProfileData","isOwner","goToEditMode","onClick","fullName","lookingForAJob","lookingForAJobDescription","aboutMe","ProfileInfo","savePhoto","safeProfile","info","photos","large","userPhoto","target","files","length","initialValues","formData","Profile","store","ProfileContainer","userId","this","match","params","authorizedUserId","history","push","getUserProfile","getStatus","refreshProile","prevProps","prevState","snapshot","Component","compose","auth","isAuth","withRouter"],"mappings":"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","file":"static/js/3.bf8b89a8.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"content\":\"MyPosts_content__lkT1l\",\"posts_title\":\"MyPosts_posts_title__31AZu\",\"bat\":\"MyPosts_bat__3xuQY\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"content\":\"Posts_content__1ryFK\",\"itemPosts\":\"Posts_itemPosts__1ZwLN\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"contact\":\"ProfileInfo_contact__1G7tr\"};","import React from 'react';\r\nimport classes from './Posts.module.css';\r\n\r\nconst Posts = (props) => {\r\n\r\n    return (\r\n        <div>\r\n            <div className={classes.itemPosts}>{props.message}\r\n                <div><img src=\"https://encrypted-tbn0.gstatic.com/images?q=tbn%3AANd9GcQ_TMucoUN1zUfyuV7NZrMns1-BGHMCMdj-gOJp1PiJvzS2ecHC&usqp=CAU\" alt=\"DOG\" /></div>\r\n            </div>\r\n            <span>like </span>{props.likesCount}\r\n        </div>\r\n    );\r\n}\r\n// tect\r\nexport default Posts;","import React from 'react';\r\nimport classes from './MyPosts.module.css';\r\nimport Posts from './Posts/Posts';\r\nimport { Field } from 'redux-form'; \r\nimport { reduxForm } from 'redux-form';\r\nimport {maxLengthCreator,required} from \"../../../utils/validators/validators\";\r\nimport {Textarea} from '../../../components/common/FormControls/FormControls';\r\n\r\n\r\nconst MyPosts = React.memo(props => {\r\n    console.log(\"render\");\r\n    let PostsElements = props.posts.map(p => <Posts message={p.message} likesCount={p.likesCount} />);\r\n\r\n    let newPostElement = React.createRef();\r\n\r\n    let onAddPost = (values) => {\r\n        props.addPost(values.newPostText);\r\n    }\r\n\r\n    return (\r\n        <div className={classes.content}>\r\n            <div className={classes.posts_title}>\r\n                <h3>My post</h3>\r\n                <AddNewPostForm onSubmit={onAddPost} />\r\n                <div className={classes.posts}>\r\n                    {PostsElements}\r\n                </div>\r\n            </div>\r\n        </div>\r\n    );\r\n});\r\nconst maxLength10 =maxLengthCreator(10);\r\nfunction AddNewPostForm (props) {\r\n    return <form onSubmit={props.handleSubmit}>\r\n            <div>\r\n                <Field name=\"newPostText\" component={Textarea} \r\n                validate={[required, maxLength10]} />\r\n            </div>\r\n            <div>\r\n                <button>Add post</button>\r\n            </div>\r\n        </form>\r\n    }\r\nAddNewPostForm = reduxForm({form:\"ProfileAddNewPostForm\"})(AddNewPostForm);\r\nexport default MyPosts;","import {\r\n    addPostActionCreator\r\n} from '../../../redux/profile-reducer';\r\nimport MyPosts from \"./MyPosts\";\r\nimport {\r\n    connect\r\n} from 'react-redux';\r\n\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        posts: state.profilePage.posts,\r\n        newPostText: state.profilePage.newPostText\r\n    }\r\n}\r\nconst mapDispatchToProps = (dispatch) => {\r\n    return {\r\n        addPost: (newPostText) => {\r\n            dispatch(addPostActionCreator(newPostText));\r\n        }\r\n    }\r\n}\r\n\r\nconst MyPostsContainer = connect(mapStateToProps, mapDispatchToProps)(MyPosts);\r\nexport default MyPostsContainer;","import React from 'react';\r\nimport { useEffect } from 'react';\r\nimport { useState } from 'react';\r\n\r\n\r\n\r\n\r\nconst ProfileStatusWithHoooks = (props) => {\r\n\r\n    let [editMode, setEditMode] = useState(false);\r\n    let [status, setStatus] = useState(props.status);\r\n\r\n\r\n    useEffect(() => {\r\n        setStatus(props.status);\r\n    }, [props.status]);\r\n\r\n    const activateEditMode = () => {\r\n        setEditMode(true);\r\n    }\r\n    const deactivateEditMode = () => {\r\n        setEditMode(false);\r\n        props.updateStatus(status);\r\n    }\r\n\r\n    const onStatusChange = (e) => {\r\n        setStatus(e.currentTarget.value);\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            {!editMode &&\r\n                <div>\r\n                    <span onDoubleClick={activateEditMode} >{props.status || \"----\"}</span>\r\n                </div>\r\n            }\r\n            {editMode &&\r\n                <div>\r\n                    <input onChange={onStatusChange} autoFocus={true} onBlur={deactivateEditMode} value={status} />\r\n                </div>\r\n            }\r\n        </div>\r\n    )\r\n\r\n}\r\n\r\n\r\nexport default ProfileStatusWithHoooks;","import React from 'react';\r\nimport { reduxForm } from 'redux-form';\r\nimport { createField, Input, Textarea  } from '../../common/FormControls/FormControls';\r\n\r\nconst ProfileDataForm = ({ handleSubmit, profile}) => {\r\n    return <form onSubmit={handleSubmit}>\r\n        <div><button>save</button></div>\r\n        <div>\r\n            Full name:{createField(\"Full name\", \"fullName\", [], Input)}\r\n        </div>\r\n        <div>\r\n            Search a job:{createField(\"\", \"lookingForAJob\", [], Input, { type: \"checkbox\" })}\r\n        </div>\r\n        <div>\r\n            My professional skills:\r\n            {createField(\"My professional skills\", \"lookingForAJobDescription\", [], Textarea)}\r\n        </div>\r\n\r\n        <div>\r\n            About me:\r\n            {createField(\"About me\", \"aboutMe\", [], Textarea)}\r\n        </div>\r\n        <div>\r\n            <b>Contacts</b>: {Object.keys(profile.contacts).map(key => {\r\n                return <div><b>{key}: {createField(key, \"contacts.\" + key, [], Input)} </b>\r\n                    </div>\r\n            })}\r\n        </div>\r\n        <div>\r\n\r\n        </div>\r\n    </form>\r\n}\r\nconst ProfileDataFormReduxForm = reduxForm({ form: 'edit-profile' })(ProfileDataForm);\r\nexport default ProfileDataFormReduxForm;","import React from 'react';\r\nimport classes from './ProfileInfo.module.css'\r\nimport Preloader from '../../common/preloader/preloader';\r\nimport ProfileStatusWithHoooks from './ProfileStatusWithHoooks';\r\nimport userPhoto from '../../../assets/img/users.png';\r\nimport { useState } from 'react';\r\n// import editMode from '../ProfileInfo/ProfileStatusWithHoooks';\r\n// import setEditMode from '../ProfileInfo/ProfileStatusWithHoooks';\r\nimport ProfileDataForm from './ProfileDataForm';\r\n\r\n\r\nconst ProfileInfo = ({ profile, status, updateStatus, isOwner, savePhoto, safeProfile}) => {\r\n\r\n// Govno kod need refactoring\r\n    let [editMode, setEditMode] = useState(false);\r\n//\r\n    if (!profile) {\r\n        return <Preloader />\r\n    }\r\n\r\n    \r\n    const onMainFotoSelected = (e) => {\r\n        if (e.target.files.length) {\r\n            savePhoto(e.target.files[0]);\r\n        }\r\n    }\r\n    const onSubmit = (formData) => {\r\n        safeProfile(formData);\r\n        setEditMode(false);\r\n        }\r\n        \r\n    \r\n    return <div className={classes.info}>\r\n            <img src={profile.photos.large || userPhoto} />\r\n            {isOwner && <input type={\"file\"} onChange={onMainFotoSelected} />}\r\n\r\n            {editMode\r\n                ? <ProfileDataForm initialValues={profile} profile={profile} onSubmit={onSubmit} />\r\n                : \r\n                <ProfileData goToEditMode={() => { setEditMode(true) }} profile={profile} isOwner={isOwner}/>}\r\n\r\n            <ProfileStatusWithHoooks status={status} updateStatus={updateStatus} />\r\n        </div>\r\n}\r\n    \r\n\r\nconst Contact = ({ contactTitle, conactValue }) => {\r\n    return <div className={classes.contact}><b>{contactTitle}</b>: {conactValue}</div>\r\n}\r\nconst ProfileData = ({ profile, isOwner, goToEditMode}) => {\r\n\r\n    return <div>\r\n        {isOwner && <div><button onClick={goToEditMode}>edit</button></div>}\r\n        <div>\r\n            Full name:{profile.fullName}\r\n        </div>\r\n        <div>\r\n            Search a job:{profile.lookingForAJob ? \"yes\" : \"no\"}\r\n        </div>\r\n        {profile.lookingForAJob &&\r\n            <div>\r\n                Job description:{profile.lookingForAJobDescription}\r\n            </div>\r\n        }\r\n        <div>\r\n\r\n        </div>\r\n        <div>\r\n            About me:{profile.aboutMe}\r\n        </div>\r\n        <div>\r\n            <b>Contacts</b>: {Object.keys(profile.contacts).map(key => {\r\n                return <Contact key={key} contactTitle={key} conactValue={profile.contacts[key]} />\r\n            })}\r\n        </div>\r\n    </div>\r\n}\r\n\r\n\r\nexport default ProfileInfo;","import React from 'react';\r\nimport MyPostsContainer from './MyPosts/MyPostsContainer';\r\nimport ProfileInfo from './ProfileInfo/ProfileInfo'\r\n\r\nconst Profile = (props) => {\r\n    \r\n    return (\r\n        <div >\r\n            <ProfileInfo \r\n             savePhoto ={props.savePhoto}\r\n             isOwner={props.isOwner} \r\n             profile={props.profile}\r\n             status={props.status}\r\n             updateStatus={props.updateStatus}\r\n             safeProfile={props.safeProfile} />\r\n            <MyPostsContainer store={props.store} />\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Profile;","import React from 'react';\r\nimport Profile from './Profile'\r\nimport { connect } from 'react-redux';\r\nimport { getUserProfile, getStatus, updateStatus, savePhoto, safeProfile } from '../../redux/profile-reducer';\r\nimport { withRouter } from 'react-router-dom';\r\nimport { compose } from 'redux';\r\n\r\nclass ProfileContainer extends React.Component {\r\n\r\n\r\n    refreshProile() {\r\n\r\n        let userId = this.props.match.params.userId;\r\n        if (!userId) {\r\n            userId = this.props.authorizedUserId;\r\n            if (!userId) this.props.history.push('/login');\r\n        }\r\n        this.props.getUserProfile(userId);\r\n        this.props.getStatus(userId);\r\n    }\r\n\r\n    componentDidMount() {\r\n        \r\n        this.refreshProile();\r\n    }\r\n\r\n    componentDidUpdate(prevProps, prevState, snapshot) {\r\n        if (this.props.match.params.userId != prevProps.match.params.userId) {\r\n            this.refreshProile();\r\n        }\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <Profile isOwner={!this.props.match.params.userId} {...this.props} profile={this.props.profile}\r\n                status={this.props.status}\r\n                updateStatus={this.props.updateStatus}\r\n                savePhoto={this.props.savePhoto} />\r\n        )\r\n    }\r\n}\r\n\r\nlet mapStateToProps = (state) => ({\r\n    profile: state.profilePage.profile,\r\n    status: state.profilePage.status,\r\n    authorizedUserId: state.auth.userId,\r\n    isAuth: state.auth.isAuth\r\n\r\n});\r\n\r\n\r\nexport default compose(\r\n    connect(mapStateToProps, { getUserProfile, getStatus, updateStatus, savePhoto, safeProfile }),\r\n    withRouter)(ProfileContainer);"],"sourceRoot":""}