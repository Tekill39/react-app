{"version":3,"sources":["components/Profile/MyPosts/MyPosts.module.css","components/Profile/MyPosts/Posts/Posts.module.css","components/Profile/MyPosts/Posts/Posts.jsx","components/Profile/MyPosts/MyPosts.jsx","components/Profile/MyPosts/MyPostsContainer.js","components/Profile/ProfileInfo/ProfileStatusWithHoooks.jsx","components/Profile/ProfileInfo/ProfileInfo.jsx","components/Profile/Profile.jsx","components/Profile/ProfileContainer.jsx"],"names":["module","exports","Posts","props","className","classes","itemPosts","message","src","alt","likesCount","MyPosts","React","memo","console","log","PostsElements","posts","map","p","createRef","content","posts_title","AddNewPostForm","onSubmit","values","addPost","newPostText","maxLength10","maxLengthCreator","handleSubmit","Field","name","component","Textarea","validate","required","reduxForm","form","MyPostsContainer","connect","state","profilePage","dispatch","addPostActionCreator","ProfileStatusWithHoooks","useState","editMode","setEditMode","status","setStatus","useEffect","onDoubleClick","onChange","e","currentTarget","value","autoFocus","onBlur","updateStatus","ProfileInfo","profile","info","photos","large","Profile","store","ProfileContainer","userId","this","match","params","authorizedUserId","getUserProfile","getStatus","Component","compose","auth","isAuth","withRouter"],"mappings":"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","file":"static/js/3.822c5df8.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"content\":\"MyPosts_content__lkT1l\",\"posts_title\":\"MyPosts_posts_title__31AZu\",\"bat\":\"MyPosts_bat__3xuQY\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"content\":\"Posts_content__1ryFK\",\"itemPosts\":\"Posts_itemPosts__1ZwLN\"};","import React from 'react';\r\nimport classes from './Posts.module.css';\r\n\r\nconst Posts = (props) => {\r\n\r\n    return (\r\n        <div>\r\n            <div className={classes.itemPosts}>{props.message}\r\n                <div><img src=\"https://encrypted-tbn0.gstatic.com/images?q=tbn%3AANd9GcQ_TMucoUN1zUfyuV7NZrMns1-BGHMCMdj-gOJp1PiJvzS2ecHC&usqp=CAU\" alt=\"DOG\" /></div>\r\n            </div>\r\n            <span>like </span>{props.likesCount}\r\n        </div>\r\n    );\r\n}\r\n// tect\r\nexport default Posts;","import React from 'react';\r\nimport classes from './MyPosts.module.css';\r\nimport Posts from './Posts/Posts';\r\nimport { Field } from 'redux-form'; \r\nimport { reduxForm } from 'redux-form';\r\nimport {maxLengthCreator,required} from \"../../../utils/validators/validators\";\r\nimport {Textarea} from '../../../components/common/FormControls/FormControls';\r\n\r\n\r\nconst MyPosts = React.memo(props => {\r\n    console.log(\"render\");\r\n    let PostsElements = props.posts.map(p => <Posts message={p.message} likesCount={p.likesCount} />);\r\n\r\n    let newPostElement = React.createRef();\r\n\r\n    let onAddPost = (values) => {\r\n        props.addPost(values.newPostText);\r\n    }\r\n\r\n    return (\r\n        <div className={classes.content}>\r\n            <div className={classes.posts_title}>\r\n                <h3>My post</h3>\r\n                <AddNewPostForm onSubmit={onAddPost} />\r\n                <div className={classes.posts}>\r\n                    {PostsElements}\r\n                </div>\r\n            </div>\r\n        </div>\r\n    );\r\n});\r\nconst maxLength10 =maxLengthCreator(10);\r\nfunction AddNewPostForm (props) {\r\n    return <form onSubmit={props.handleSubmit}>\r\n            <div>\r\n                <Field name=\"newPostText\" component={Textarea} \r\n                validate={[required, maxLength10]} />\r\n            </div>\r\n            <div>\r\n                <button>Add post</button>\r\n            </div>\r\n        </form>\r\n    }\r\nAddNewPostForm = reduxForm({form:\"ProfileAddNewPostForm\"})(AddNewPostForm);\r\nexport default MyPosts;","import React from 'react';\r\nimport {\r\n    addPostActionCreator,\r\n    updateNewPostTextActionCreator\r\n} from '../../../redux/profile-reducer';\r\nimport MyPosts from \"./MyPosts\";\r\nimport {\r\n    connect\r\n} from 'react-redux';\r\n\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        posts: state.profilePage.posts,\r\n        newPostText: state.profilePage.newPostText\r\n    }\r\n}\r\nconst mapDispatchToProps = (dispatch) => {\r\n    return {\r\n        addPost: (newPostText) => {\r\n            dispatch(addPostActionCreator(newPostText));\r\n        }\r\n    }\r\n}\r\n\r\nconst MyPostsContainer = connect(mapStateToProps, mapDispatchToProps)(MyPosts);\r\nexport default MyPostsContainer;","import React from 'react';\r\nimport { useEffect } from 'react';\r\nimport { useState } from 'react';\r\n\r\n\r\n\r\n\r\nconst ProfileStatusWithHoooks = (props) => {\r\n\r\n    let [editMode, setEditMode] = useState(false);\r\n    let [status, setStatus] = useState(props.status);\r\n\r\n\r\n    useEffect(() => {\r\n        setStatus(props.status);\r\n    }, [props.status]);\r\n\r\n    const activateEditMode = () => {\r\n        setEditMode(true);\r\n    }\r\n    const deactivateEditMode = () => {\r\n        setEditMode(false);\r\n        props.updateStatus(status);\r\n    }\r\n\r\n    const onStatusChange = (e) => {\r\n        setStatus(e.currentTarget.value);\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            {!editMode &&\r\n                <div>\r\n                    <span onDoubleClick={activateEditMode} >{props.status || \"----\"}</span>\r\n                </div>\r\n            }\r\n            {editMode &&\r\n                <div>\r\n                    <input onChange={onStatusChange} autoFocus={true} onBlur={deactivateEditMode} value={status} />\r\n                </div>\r\n            }\r\n        </div>\r\n    )\r\n\r\n}\r\n\r\n\r\nexport default ProfileStatusWithHoooks;","import React from 'react';\r\nimport classes from './ProfileInfo.module.css'\r\nimport Preloader from '../../common/preloader/preloader';\r\nimport ProfileStatusWithHoooks from './ProfileStatusWithHoooks';\r\n\r\n\r\nconst ProfileInfo = ({profile,status,updateStatus}) => {\r\n   \r\n    if(!profile){\r\n        return <Preloader/>\r\n    }\r\n\r\n    return (\r\n        <div className={classes.info}><img src ={profile.photos.large}/>\r\n            \r\n            <ProfileStatusWithHoooks status={status} updateStatus={updateStatus}/>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default ProfileInfo;","import React from 'react';\r\nimport MyPostsContainer from './MyPosts/MyPostsContainer';\r\nimport ProfileInfo from './ProfileInfo/ProfileInfo'\r\n\r\nconst Profile = (props) => {\r\n    \r\n    return (\r\n        <div >\r\n            <ProfileInfo profile={props.profile} status={props.status} updateStatus={props.updateStatus}/>\r\n            <MyPostsContainer store={props.store} />\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Profile;","import React from 'react';\r\nimport Profile from './Profile'\r\nimport { connect } from 'react-redux';\r\nimport {getUserProfile, getStatus,updateStatus} from '../../redux/profile-reducer';\r\nimport {withRouter} from 'react-router-dom';\r\nimport {Redirect} from 'react-router-dom'; \r\nimport {withAuthRedirect} from '../../hoc/withAuthRedirect';\r\nimport { compose } from 'redux';\r\n\r\nclass ProfileContainer extends React.Component {\r\n    \r\n\r\n    componentDidMount() {\r\n      \r\n        let userId = this.props.match.params.userId;\r\n        if(!userId){\r\n            userId=this.props.authorizedUserId;\r\n        }\r\n        this.props.getUserProfile(userId);\r\n        this.props.getStatus(userId);\r\n    }\r\n       \r\n\r\n    render() {\r\n        \r\n        return (\r\n            <Profile {...this.props} profile={this.props.profile} status={this.props.status} updateStatus={this.props.updateStatus} />\r\n        )\r\n    }\r\n}\r\n\r\nlet mapStateToProps = (state) =>({\r\n    profile:state.profilePage.profile,\r\n    status:state.profilePage.status,\r\n    authorizedUserId:state.auth.userId,\r\n    isAuth:state.auth.isAuth\r\n\r\n});\r\n\r\n\r\nexport default compose(\r\nconnect(mapStateToProps,{getUserProfile, getStatus, updateStatus}), \r\nwithRouter\r\n// withAuthRedirect\r\n)(ProfileContainer);"],"sourceRoot":""}